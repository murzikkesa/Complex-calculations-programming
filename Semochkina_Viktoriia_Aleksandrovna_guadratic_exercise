{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Требуется решить квадратное уравнение: $x^2+bx+c=0$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from decimal import Decimal\n",
    "import cmath\n",
    "from numpy import allclose"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def quadratic_equation(b,c):\n",
    "    \"\"\" Решение квадратного уравнения. Используем метод нахождения корней с помощью дискриминанта.\n",
    "     Корни квадратного дискриминанта зависят от знака дискриминанта.\n",
    "     \"\"\"\n",
    "    b=Decimal(b)\n",
    "    c=Decimal(c)\n",
    "    if c==0: \n",
    "        if b==0:\n",
    "            x_first=float(0)\n",
    "            x_second=x_first\n",
    "        x_first=float(-b)\n",
    "        x_second=0\n",
    "    else:\n",
    "        D = b**2 - 4 * c\n",
    "        \n",
    "        \"\"\" Если D>0, то уравнение имеет два различных вещественных корня.\"\"\"\n",
    "        if D > 0:\n",
    "            x_first = float((-b + np.sqrt(D))/2)\n",
    "            x_second = float((-b - np.sqrt(D))/2)\n",
    "            \n",
    "            \"\"\"Если D=0,то уравнение имеет 1 корень или 2 совпадающих вещественных корня\"\"\"\n",
    "        elif D == 0:\n",
    "             x_first = float(-b/2)\n",
    "             x_second = x_first\n",
    "             \n",
    "             \"\"\"Если D<0,то уравнение имеет два мнимых корня\"\"\"\n",
    "        else:\n",
    "             b = float(b)\n",
    "             c = float(c)\n",
    "             D= float(D)\n",
    "             x_first = (-b + cmath.sqrt(D))/2\n",
    "             x_second = (-b - cmath.sqrt(D))/2\n",
    "    return x_first,x_second \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Тесты для различных значений дискриминанта"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "variants = [{'b': 8.0, 'c': 2.0},\n",
    "            {'b': 1.0, 'c': 9.0},\n",
    "            {'b': 0.5, 'c': 4.0},\n",
    "            {'b': 1e10, 'c': 3.0},\n",
    "            {'b': -1e10, 'c': 4.0},\n",
    "            {'b':-7.0,'c':1.0}]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\nTrue\nTrue\nTrue\nTrue\nTrue\n"
     ]
    }
   ],
   "source": [
    "for var in variants:\n",
    "    x1, x2 = quadratic_equation(**var)\n",
    "    print(allclose(x1*x2, var['c']))"
   ]
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 0
}
